{"ast":null,"code":"import _toConsumableArray from\"/Users/emilyzhang/VSCode/wordcloud-fe/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import{useEffect}from\"react\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";function WordCloud(props){function pickColor(){var newColors=[].concat(colors);newColors.splice(newColors.indexOf(prevColor),1);var newColor=newColors[Math.floor(Math.random()*newColors.length)];prevColor=newColor;return newColor;}function shuffleArray(arr){// Knuth shuffle to randomize array\nvar cur=arr.length;// starts at end of erray\nvar index;while(cur!==0){index=Math.floor(Math.random()*cur);// pick random index\ncur--;// swap with cur\nvar _ref=[arr[index],arr[cur]];arr[cur]=_ref[0];arr[index]=_ref[1];}return arr;}var punctuationless=props.text.replace(/[\\.,-\\/#!$%\\^&\\*;:{}=\\-_`~()@\\+\\?><\\[\\]\\+]/g,\"\").replace(/(\\r\\n|\\n|\\r)/gm,\" \");// const punctuationless = props.text.replace(\n//   /[.,-/#!$%^&*;:{}=\\-_`~()@+?><[]+]/g,\n//   \"\"\n// );\nvar invalidWords=[\"a\",\"an\",\"the\",\"\"];var minFont=1;//em\nvar maxFont=11;var colors=[\"#2C3639\",\"#85586F\",\"#A27B5C\",\"#EDECE8\",\"#E3CAA5\",\"#B25068\"];var prevColor=colors[0];// console.log(\"Generating Word Cloud...\");\n// console.log(punctuationless);\nvar words=punctuationless.split(\" \");// console.log(words);\nvar map=new Map();words.forEach(function(word){word=word.toLowerCase();if(!map.has(word)){if(!invalidWords.includes(word)){map.set(word,1);}}else{map.set(word,map.get(word)+1);}});// console.log(map);\nvar sortedMap=new Map(_toConsumableArray(map.entries()).sort(function(a,b){return b[1]-a[1];}));// console.log(sortedMap);\nvar keys=sortedMap.keys();var keysArr=_toConsumableArray(keys);useEffect(function(){props.updateLimits(keysArr.length);});// so that slider is < 100 if number of words is < 100\n// console.log(keysArr.length);\nvar maxFreq=map.get(keysArr[0]);var minFreq=map.get(keysArr[props.max-1]);return/*#__PURE__*/_jsx(\"div\",{className:\"wordcloud\",children:shuffleArray(keysArr.slice(0,props.numWords)).map(function(key){var fontSize=maxFont+(maxFont-minFont)/(maxFreq-minFreq)*(map.get(key)-maxFreq);return/*#__PURE__*/_jsxs(\"span\",{className:\"rotated\",style:{fontSize:fontSize+\"em\",color:pickColor()},children:[\" \",key,\" \"]},key);})});}export default WordCloud;","map":{"version":3,"names":["useEffect","WordCloud","props","pickColor","newColors","colors","splice","indexOf","prevColor","newColor","Math","floor","random","length","shuffleArray","arr","cur","index","punctuationless","text","replace","invalidWords","minFont","maxFont","words","split","map","Map","forEach","word","toLowerCase","has","includes","set","get","sortedMap","entries","sort","a","b","keys","keysArr","updateLimits","maxFreq","minFreq","max","slice","numWords","key","fontSize","color"],"sources":["/Users/emilyzhang/VSCode/wordcloud-fe/src/components/WordCloud.jsx"],"sourcesContent":["import { useEffect } from \"react\";\n\nfunction WordCloud(props) {\n  function pickColor() {\n    let newColors = [...colors];\n    newColors.splice(newColors.indexOf(prevColor), 1);\n    let newColor = newColors[Math.floor(Math.random() * newColors.length)];\n    prevColor = newColor;\n    return newColor;\n  }\n  function shuffleArray(arr) {\n    // Knuth shuffle to randomize array\n    let cur = arr.length; // starts at end of erray\n    let index;\n\n    while (cur !== 0) {\n      index = Math.floor(Math.random() * cur); // pick random index\n      cur--;\n\n      // swap with cur\n      [arr[cur], arr[index]] = [arr[index], arr[cur]];\n    }\n\n    return arr;\n  }\n  const punctuationless = props.text\n    .replace(/[\\.,-\\/#!$%\\^&\\*;:{}=\\-_`~()@\\+\\?><\\[\\]\\+]/g, \"\")\n    .replace(/(\\r\\n|\\n|\\r)/gm, \" \");\n\n  // const punctuationless = props.text.replace(\n  //   /[.,-/#!$%^&*;:{}=\\-_`~()@+?><[]+]/g,\n  //   \"\"\n  // );\n  const invalidWords = [\"a\", \"an\", \"the\", \"\"];\n  const minFont = 1; //em\n  const maxFont = 11;\n  const colors = [\"#2C3639\", \"#85586F\", \"#A27B5C\", \"#EDECE8\", \"#E3CAA5\", \"#B25068\"];\n  let prevColor = colors[0];\n  // console.log(\"Generating Word Cloud...\");\n  // console.log(punctuationless);\n  const words = punctuationless.split(\" \");\n  // console.log(words);\n  const map = new Map();\n\n  words.forEach((word) => {\n    word = word.toLowerCase();\n    if (!map.has(word)) {\n      if (!invalidWords.includes(word)) {\n        map.set(word, 1);\n      }\n    } else {\n      map.set(word, map.get(word) + 1);\n    }\n  });\n\n  // console.log(map);\n\n  const sortedMap = new Map([...map.entries()].sort((a, b) => b[1] - a[1]));\n  // console.log(sortedMap);\n  const keys = sortedMap.keys();\n  const keysArr = [...keys];\n  useEffect(() => {\n    props.updateLimits(keysArr.length);\n  }); // so that slider is < 100 if number of words is < 100\n  // console.log(keysArr.length);\n  const maxFreq = map.get(keysArr[0]);\n  const minFreq = map.get(keysArr[props.max - 1]);\n\n  return (\n    <div className=\"wordcloud\">\n      {shuffleArray(keysArr.slice(0, props.numWords)).map((key) => {\n        const fontSize =\n          maxFont + ((maxFont - minFont) / (maxFreq - minFreq)) * (map.get(key) - maxFreq);\n        return (\n          <span\n            key={key}\n            className=\"rotated\"\n            style={{\n              fontSize: fontSize + \"em\",\n              color: pickColor(),\n            }}\n          >\n            {\" \"}\n            {key}{\" \"}\n          </span>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default WordCloud;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}